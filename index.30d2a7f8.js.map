{"mappings":"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","sources":["src/index.js","src/js/utilitiesJS/selectLang.js","src/js/utilitiesJS/selectTrend.js","src/js/gallery.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","src/js/onSearchForm.js"],"sourcesContent":["import './js/modal';\nimport './js/utilitiesJS/selectLang';\nimport './js/utilitiesJS/selectTrend';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\nimport './js/firebase';\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.langValue.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('language')) {\n  const parsedData = JSON.parse(localStorage.getItem('language'));\n  refs.langValue.value = parsedData;\n  serverApi.setlang(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const language = evt.target.value;\n\n  serverApi.setlang(language);\n\n  localStorage.setItem('language', JSON.stringify(language));\n\n  location.reload();\n}\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.trend.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('selected-trend')) {\n  const parsedData = JSON.parse(localStorage.getItem('selected-trend'));\n  refs.trend.value = parsedData;\n  serverApi.setTrend(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const trend = evt.target.value;\n\n  serverApi.setTrend(trend);\n\n  localStorage.setItem('selected-trend', JSON.stringify(trend));\n\n  location.reload();\n}\n","// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","// import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport { genresArr, genresUK } from './genres';\nimport { spinnerPlay, spinnerStop } from '../spinner';\n\nconst pagination = new Pagination(refs.tuiContainer, options);\n\nspinnerPlay(); // ! не пересовувати\n\npagination.on('beforeMove', async event => {\n\n  spinnerPlay();\n  pagination.setTotalItems(serverApi.totalResults);\n\n  if (refs.trend.value === 'top' || refs.trend.value === 'popular') {\n    pagination.setTotalItems(10000);\n    serverApi.setTotalResults(10000);\n  } else {\n    pagination.setTotalItems(serverApi.totalResults);\n  }\n\n\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  serverApi.setPage(1);\n\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        let genresMovie = null;\n        let releaseDate = null;\n\n        // проверка на жанры фильмов\n\n        const genresMovies = genresArr.reduce((acc, genre) => {\n          if (genre_ids.includes(genre.id)) {\n            acc.push(genre.name);\n          }\n          return acc;\n        }, []);\n\n        if (genresMovies.length > 3) {\n          genresMovie = genresMovies.slice(0, 2);\n          genresMovie.splice(2, 1, 'Other');\n        } else if (genresMovies.length === 0) {\n          genresMovie = [`Genres not found`];\n        } else {\n          genresMovie = genresMovies;\n        }\n\n        // проверка на дату релиза\n        if (!release_date) {\n          releaseDate = 'Release data no found';\n        } else {\n          releaseDate = release_date.slice(0, 4);\n        }\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <div>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(\n          `, `\n        )} | ${releaseDate}</p></div>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  if (refs.langValue.value === 'ru') {\n    return (refs.gallery.innerHTML = `<li class=\"warship\"><img src=\"${warship}\" /></li>`);\n  }\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  try {\n    let movies = [];\n\n    if (refs.trend.value === 'top') {\n      movies = await serverApi.getTop();\n    } else if (refs.trend.value === 'popular') {\n      movies = await serverApi.getPopular();\n    } else {\n      movies = await serverApi.getPopularMovie();\n    }\n\n    serverApi.setTotalResults(movies.total_results);\n    murkupGalleryOnPageLoading(movies.results);\n  } catch (error) {\n    console.log(error);\n  }\n\n  spinnerStop();\n}\n","// import Notiflix from 'notiflix';\n// import Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport {\n  murkupGalleryOnPageLoading,\n  murkupGallery,\n} from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    spinnerStop();\n    return;\n  }\n\n  await murkupSearchMovie();\n\n  spinnerStop();\n\n  const pagination = new Pagination(refs.tuiContainer, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20 && total_results !== 0) {\n    refs.tuiContainer.classList.add('visually-hidden');\n  } else {\n    refs.tuiContainer.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    murkupGallery();\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    searchQuery = ' ';\n    history.goBack();\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","$jaaYu","refs","langValue","addEventListener","evt","language","target","value","serverApi","setlang","localStorage","setItem","JSON","stringify","location","reload","getItem","$e9bed70a02c7e5b3$var$parsedData","parse","$hiFhO","trend","setTrend","$7b1a18f643596ea4$var$parsedData","$bpxeT","$0ced5e31662a45f8$var$pagination","Pagination","tuiContainer","$jcFG7","options","$0ced5e31662a45f8$export$ce0b9808aa57ae7d","movies","setPage","moviesMurkup","map","param","original_title","title","poster_path","id","genre_ids","release_date","src","$9PJ7S","genresMovie","releaseDate","genresMovies","$4zVoc","genresArr","reduce","acc","genre","includes","push","name","length","slice","splice","concat","join","gallery","innerHTML","warship","$0ced5e31662a45f8$export$6bb355015a1580b","$0ced5e31662a45f8$var$_murkupGallery","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","getTop","_ctx","sent","getPopular","getPopularMovie","setTotalResults","total_results","results","console","log","t0","$j1lrD","spinnerStop","spinnerPlay","on","event","currentPage","setTotalItems","totalResults","page","$6756f0db6f988caf$var$_onClickMovie","e","detailsMovie","movieMurkup","watchBtn","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","parentElement","className","$5xtVg","onOpenModal","dataset","getDetailsMovie","$kiFmR","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$5HOzi","makeWatchTextContent","makeQueueTextContent","document","querySelector","getTrailer","then","classList","add","remove","setAttribute","Notiflix","Notify","failure","position","fontFamily","borderRadius","clickToClose","$4cXS4","onAddWatchClick","onAddQueueClick","$dkUq4","handleClick","closeModal","$98475668925f8ab5$var$searchQuery","$98475668925f8ab5$var$_onSubmitClick","event1","preventDefault","setRequestCount","currentTarget","elements","serch_film","trim","toLowerCase","$98475668925f8ab5$export$80a6146058001a40","incrementRequestCount","$98475668925f8ab5$var$_murkupSearchMovie","data","getMovieOnDemand","totalItems","history","goBack","formRef"],"version":3,"file":"index.30d2a7f8.js.map"}